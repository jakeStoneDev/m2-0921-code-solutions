{
  "nextId": 33,
  "notes": {
    "1": "The event loop is how a JavaScript runtime pushes asynchronous callbacks onto the stack once the stack is cleared.",
    "2": "Prototypal inheritance is how JavaScript objects delegate behavior.",
    "3": "In JavaScript, the value of `this` is determined when a function is called; not when it is defined.",
    "4": "A closure is formed when a function retains access to variables in its lexical scope.",
    "5": "hey",
    "6": "hey",
    "7": "hey",
    "8": "hey",
    "11": "hey",
    "13": "hey",
    "14": "I just want to fly.",
    "15": "I just want to fly.",
    "16": "I just want to fly.",
    "17": "I just want to fly.",
    "18": "I just want to fly.",
    "19": "I just want to fly.",
    "20": "I just want to fly.",
    "21": "I just want to bye.",
    "22": "I just want to bye.",
    "23": "I just want to bye.",
    "24": "I just want to bye.",
    "25": "I just want to hey.",
    "26": "I just want to hey.",
    "27": "I just want to hey.",
    "28": "I just want to hey.",
    "29": "I just want to say",
    "30": "I just want to say",
    "31": "I just want to bye.",
    "32": "I just want to Nye the science guy."
  }
}